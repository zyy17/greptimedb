searchState.loadedDescShard("frontend", 0, "SNAFU context selector for the <code>Error::CacheRequired</code> variant\nSNAFU context selector for the <code>Error::Catalog</code> variant\nSNAFU context selector for the <code>Error::CollectRecordbatch</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::ColumnNotFound</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::DataFusion</code> variant\nSNAFU context selector for the <code>Error::DescribeStatement</code> …\nContains the error value\nSNAFU context selector for the <code>Error::ExecLogicalPlan</code> …\nSNAFU context selector for the <code>Error::ExecutePromql</code> variant\nSNAFU context selector for the <code>Error::External</code> variant\nSNAFU context selector for the <code>Error::FindRegionPeer</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::IllegalAuthConfig</code> …\nSNAFU context selector for the <code>Error::IllegalPrimaryKeysDef</code>…\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::IncompleteGrpcRequest</code>…\nSNAFU context selector for the <code>Error::InitPlugin</code> variant\nSNAFU context selector for the <code>Error::Insert</code> variant\nSNAFU context selector for the <code>Error::InvalidDeleteRequest</code> …\nSNAFU context selector for the <code>Error::InvalidInsertRequest</code> …\nSNAFU context selector for the <code>Error::InvalidRegionRequest</code> …\nSNAFU context selector for the <code>Error::InvalidSql</code> variant\nSNAFU context selector for the <code>Error::InvalidTlsConfig</code> …\nSNAFU context selector for the <code>Error::InvalidateTableCache</code> …\nSNAFU context selector for the <code>Error::InvokeRegionServer</code> …\nSNAFU context selector for the <code>Error::NotSupported</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::OpenRaftEngineBackend</code>…\nSNAFU context selector for the <code>Error::ParseAddr</code> variant\nSNAFU context selector for the <code>Error::ParseSql</code> variant\nSNAFU context selector for the <code>Error::Permission</code> variant\nSNAFU context selector for the <code>Error::PlanStatement</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::ReadTable</code> variant\nSNAFU context selector for the <code>Error::RequestQuery</code> variant\nSNAFU context selector for the <code>Error::SchemaExists</code> variant\nSNAFU context selector for the <code>Error::ShutdownServer</code> …\nSNAFU context selector for the <code>Error::SqlExecIntercepted</code> …\nSNAFU context selector for the <code>Error::StartServer</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::TableNotFound</code> variant\nSNAFU context selector for the <code>Error::TableOperation</code> …\nSNAFU context selector for the <code>Error::Table</code> variant\nSNAFU context selector for the <code>Error::TomlFormat</code> variant\nSNAFU context selector for the <code>Error::UnsupportedFormat</code> …\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe <code>Frontend</code> struct is the main entry point for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe frontend heartbeat task which sending …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe frontend instance contains necessary components, and …\nAttaches a timer to the output and observes it once the …\nReturns the argument unchanged.\nHandles label values query request, returns the values.\nHandles metric names query request, returns the names.\nCalls <code>U::from(self)</code>.\nValidate <code>stmt.database</code> permission if it’s presented.\nThe frontend <code>Instance</code> builder.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis handler is mainly used for <code>frontend</code> or <code>standalone</code> to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNegotiating the content type of the remote read response.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRelative to client::region::RegionRequester\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA counter for the in-flight write bytes.\nA frontend request limiter that controls the total size of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the current in-flight write bytes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns None if the in-flight write bytes exceed the …\nCreates a new InFlightWriteBytesCounter. It will decrease …\nTimer of handling query in RPC handler.\nThe number of heartbeats received by frontend node, …\nThe number of heartbeats send by frontend node.\nThe number of OpenTelemetry logs send by frontend node.\nThe number of OpenTelemetry metrics send by frontend node.\nThe number of OpenTelemetry traces send by frontend node.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOptions for Jaeger query APIs.\nWhether to enable Jaeger query APIs.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nServer-side keep-alive time.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nServer-side keep-alive time.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSlowQueryRecorder is responsible for recording slow …\nSlowQueryTimer is used to log slow query when it’s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new SlowQueryRecorder.\nStarts a new SlowQueryTimer. Returns <code>None</code> if …")