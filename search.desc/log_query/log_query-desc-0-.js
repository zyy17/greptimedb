searchState.loadedDescShard("log_query", 0, "Represents a column with filters to query.\nMatch the content with a substring.\nControls how many adjacent lines to return.\nOnly match the exact content.\nContent exists, a.k.a. not null.\nRepresents limit and offset parameters for query …\nSpecify the number of lines before and after the matched …\nExpression to calculate on log after filtering.\nGreptimeDB’s log query request.\nMatch the content with a postfix. Similar to <code>Prefix</code>.\nMatch the content with a prefix.\nMatch the content with a regex pattern. The pattern should …\nSpecify the number of seconds before and after the matched …\nRepresents a time range for log query.\nCase-sensitive column name to query.\nColumns to return in the result set.\nAdjacent lines to return. Applies to all filters above.\nExpressions to calculate after filter.\nOptional number of items to return after skipping\nConjunction of filters to apply for the raw logs.\nFilters to apply to the column. Can be empty.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nControls row skipping and fetch on the result set.\nOptional number of items to skip before starting to return …\nA fully qualified table name to query logs from.\nSpecifies the time range for the log query. See <code>TimeFilter</code> …\nFields with type name to extract from the decomposed value.\nOptional range function parameter. Stands for the time …\nJSON, CSV, etc.\nSNAFU context selector for the <code>Error::EndBeforeStart</code> …\nContains the error value\nSNAFU context selector for the <code>Error::InvalidDateFormat</code> …\nSNAFU context selector for the <code>Error::InvalidSpanFormat</code> …\nSNAFU context selector for the <code>Error::InvalidTimeFilter</code> …\nContains the success value\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents a column with filters to query.\nMatch the content with a substring.\nControls how many adjacent lines to return.\nOnly match the exact content.\nContent exists, a.k.a. not null.\nRepresents limit and offset parameters for query …\nSpecify the number of lines before and after the matched …\nExpression to calculate on log after filtering.\nGreptimeDB’s log query request.\nMatch the content with a postfix. Similar to <code>Prefix</code>.\nMatch the content with a prefix.\nMatch the content with a regex pattern. The pattern should …\nSpecify the number of seconds before and after the matched …\nRepresents a time range for log query.\nValidate and canonicalize the time filter.\nCase-sensitive column name to query.\nColumns to return in the result set.\nAdjacent lines to return. Applies to all filters above.\nExpressions to calculate after filter.\nOptional number of items to return after skipping\nConjunction of filters to apply for the raw logs.\nFilters to apply to the column. Can be empty.\nControls row skipping and fetch on the result set.\nUtil function returns a start and optional end DateTime\nUtil function handles durations like “1 week”, “1 …\nOptional number of items to skip before starting to return …\nA fully qualified table name to query logs from.\nSpecifies the time range for the log query. See <code>TimeFilter</code> …\nFields with type name to extract from the decomposed value.\nOptional range function parameter. Stands for the time …\nJSON, CSV, etc.")