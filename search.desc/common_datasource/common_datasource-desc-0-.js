searchState.loadedDescShard("common_datasource", 0, "Default write buffer size, it should be greater than the …\nCloses the writer and flushes the buffer data.\nCloses <code>LazyBufferedWriter</code> and optionally flushes all data …\nNone stands for <code>LazyBufferedWriter</code> closed.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOnly initiates underlying file writer when rows have been …\nBzip2-ed file\nAn iterator over the variants of CompressionType\nGzip-ed file\nUncompressed file\nXz-ed file (liblzma)\nZstd-ed file,\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSNAFU context selector for the <code>Error::AsyncWrite</code> variant\nSNAFU context selector for the <code>Error::BufferedWriterClosed</code> …\nSNAFU context selector for the <code>Error::BuildBackend</code> variant\nSNAFU context selector for the <code>Error::EmptyHostPath</code> variant\nSNAFU context selector for the <code>Error::EncodeRecordBatch</code> …\nContains the error value\nSNAFU context selector for the <code>Error::InferSchema</code> variant\nSNAFU context selector for the <code>Error::InvalidConnection</code> …\nSNAFU context selector for the <code>Error::InvalidUrl</code> variant\nSNAFU context selector for the <code>Error::JoinHandle</code> variant\nSNAFU context selector for the <code>Error::ListObjects</code> variant\nSNAFU context selector for the <code>Error::MergeSchema</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::OrcReader</code> variant\nSNAFU context selector for the <code>Error::ParquetToSchema</code> …\nSNAFU context selector for the <code>Error::ParseFormat</code> variant\nSNAFU context selector for the <code>Error::ReadObject</code> variant\nSNAFU context selector for the <code>Error::ReadParquetSnafu</code> …\nSNAFU context selector for the <code>Error::ReadRecordBatch</code> …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::UnsupportedFormat</code> …\nSNAFU context selector for the <code>Error::WriteObject</code> variant\nSNAFU context selector for the <code>Error::WriteParquet</code> variant\nSNAFU context selector for the <code>Error::WriteRecordBatch</code> …\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecode records from <code>buf</code> returning the number of bytes read.\nFlushes the currently buffered data to a <code>RecordBatch</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCustomizes per-column properties.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMust initialize the reader, or throw an error from the …\nOutput the stream to a parquet file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>(schema, Option&lt;host&gt;, path)</code>\nBuild an OSS backend using the provided bucket, root, and …\nCheck if the key is supported in OSS configuration.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")