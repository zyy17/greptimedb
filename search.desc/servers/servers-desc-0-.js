searchState.loadedDescShard("servers", 0, "Cached SQL and logical plan for database interfaces\nAdd a gRPC service (<code>service</code>) to a <code>builder</code>(RoutesBuilder). …\nReturns the argument unchanged.\nInstall the ring crypto provider for rustls process-wide. …\nCalls <code>U::from(self)</code>.\nprometheus protocol supportings handles prometheus …\nprom supply the prometheus HTTP API Server compliance\nAll query handler traits for various request protocols, …\nResolves server address for meta registration. If …\nReturns the headers for every response of Elasticsearch …\nProcess <code>_bulk</code> API requests. Only support to create logs. …\nProcess <code>/${index}/_bulk</code> API requests. Only support to …\nSNAFU context selector for the <code>Error::AddressBind</code> variant\nSNAFU context selector for the <code>Error::AlreadyStarted</code> …\nSNAFU context selector for the <code>Error::Arrow</code> variant\nSNAFU context selector for the <code>Error::Auth</code> variant\nSNAFU context selector for the <code>Error::BuildHttpResponse</code> …\nSNAFU context selector for the <code>Error::Catalog</code> variant\nSNAFU context selector for the <code>Error::CheckDatabaseValidity</code>…\nSNAFU context selector for the <code>Error::CollectRecordbatch</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::ConvertScalarValue</code> …\nSNAFU context selector for the <code>Error::ConvertSqlValue</code> …\nSNAFU context selector for the <code>Error::DataFrame</code> variant\nSNAFU context selector for the <code>Error::DataFusion</code> variant\nSNAFU context selector for the <code>Error::DecodeOtlpRequest</code> …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::DescribeStatement</code> …\nSNAFU context selector for the <code>Error::DumpPprof</code> variant\nSNAFU context selector for the <code>Error::DumpProfileData</code> …\nSNAFU context selector for the <code>Error::DurationOverflow</code> …\nContains the error value\nSNAFU context selector for the <code>Error::ExecuteGrpcQuery</code> …\nSNAFU context selector for the <code>Error::ExecuteGrpcRequest</code> …\nSNAFU context selector for the <code>Error::ExecutePlan</code> variant\nSNAFU context selector for the <code>Error::ExecuteQuery</code> variant\nSNAFU context selector for the <code>Error::FailedToParseQuery</code> …\nSNAFU context selector for the <code>Error::FileWatch</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::IncompatibleSchema</code> …\nSNAFU context selector for the <code>Error::InfluxdbLineProtocol</code> …\nSNAFU context selector for the <code>Error::InternalIo</code> variant\nSNAFU context selector for the <code>Error::Internal</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidAuthHeader</code> …\nSNAFU context selector for the <code>Error::InvalidBase64Value</code> …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidFlightTicket</code> …\nSNAFU context selector for the <code>Error::InvalidHeaderValue</code> …\nSNAFU context selector for the <code>Error::InvalidJaegerQuery</code> …\nSNAFU context selector for the <code>Error::InvalidLokiLabels</code> …\nSNAFU context selector for the <code>Error::InvalidLokiPayload</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidParameter</code> …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidQuery</code> variant\nSNAFU context selector for the <code>Error::InvalidTableName</code> …\nSNAFU context selector for the <code>Error::InvalidUtf8Value</code> …\nSNAFU context selector for the <code>Error::JoinTask</code> variant\nSNAFU context selector for the <code>Error::MysqlValueConversion</code> …\nSNAFU context selector for the <code>Error::NotFoundAuthHeader</code> …\nSNAFU context selector for the <code>Error::NotFoundInfluxAuth</code> …\nSNAFU context selector for the <code>Error::NotSupported</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::Other</code> variant\nSNAFU context selector for the <code>Error::ParseJson</code> variant\nSNAFU context selector for the <code>Error::ParsePromQL</code> variant\nSNAFU context selector for the <code>Error::ParseTimestamp</code> …\nSNAFU context selector for the <code>Error::Pipeline</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::RowWriter</code> variant\nSNAFU context selector for the <code>Error::SendPromRemoteRequest</code>…\nSNAFU context selector for the <code>Error::StartGrpc</code> variant\nSNAFU context selector for the <code>Error::StartHttp</code> variant\nSNAFU context selector for the <code>Error::TableNotFound</code> variant\nSNAFU context selector for the <code>Error::TcpBind</code> variant\nSNAFU context selector for the <code>Error::TcpIncoming</code> variant\nSNAFU context selector for the <code>Error::TimePrecision</code> variant\nSNAFU context selector for the <code>Error::TimestampOverflow</code> …\nSNAFU context selector for the <code>Error::TlsRequired</code> variant\nSNAFU context selector for the <code>Error::ToJson</code> variant\nSNAFU context selector for the <code>Error::TokioIo</code> variant\nSNAFU context selector for the <code>Error::UnexpectedResult</code> …\nSNAFU context selector for the <code>Error::UnknownHint</code> variant\nSNAFU context selector for the <code>Error::UnsupportedAuthScheme</code>…\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::UnsupportedDataType</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::UpdateJemallocMetrics</code>…\nSNAFU context selector for the <code>Error::UrlDecode</code> variant\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts StatusCode to HttpStatusCode.\n<code>ToString::to_string</code>, but without panic on OOM.\nUse to export the metrics generated by greptimedb.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSend metrics collected by our internal handler for case …\nSend metrics collected by standard Prometheus RemoteWrite …\nContains the error value\nGrpc Server configuration\nContains the success value\nThe address to bind the gRPC server.\nDetect the server address.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandler for Greptime Database service. It’s implemented …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMax gRPC receiving(decoding) message size\nMax gRPC sending(encoding) message size\nPrometheusGateway provides a gRPC interface to query …\ngRPC serving state receiver. Only present if the gRPC …\nThe address to advertise to clients.\nThis middleware is responsible for authenticating the user …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd handler for DatabaseService service.\nAdd handler for FlightService.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAdd handler for [OtelArrowService].\nAdd handler for Prometheus-compatible PromQL queries ([…\nAdd handler for RegionServer.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA subset of FlightService\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHistogram timer for handling gRPC request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new timer.\nConsumes the timer and record the elapsed time with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAuthorization header\nDefault http body limit (64M).\nAllow lossy UTF8 strings\nIt allows the results of SQL queries to be presented in …\nForce UTF8 validation\nDo not validate UTF8 strings.\nAttaches middlewares and debug routes to the router. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the router and adds necessary root routes (health, …\nValidation mode while decoding Prometheus remote write …\nprom supply the prometheus HTTP API Server compliance\nRoute Prometheus remote read and write API. In other …\nRoute Prometheus HTTP API.\nAxum Test Client\n<code>ToString::to_string</code>, but without panic on OOM.\nAuthState is a holder state for <code>UserProviderRef</code> during …\nInfluxDB v2 uses “bucket” instead of “db” …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator over the variants of EventPayloadResolverInner\nLogIngesterQueryParams is used for query params of log …\naxum state struct to hold log handler and validator\nDryrun pipeline with given data pipeline_name and …\nLogIngestRequest is the internal request for log …\nCheck if the data length less than 10\nCheck if the payload is valid json Check if the payload …\nCheck if the pipeline_name exists\nThe content type of the payload. keep it for logging …\nSpecify a custom time index from the input data rather …\nThe database where log data will be written to.\nDryrun pipeline with given data\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether to ignore errors during log ingestion.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe JSON field name of the log message. If not provided, …\nParse the data with given content type If the content type …\nThe pipeline that will be used for log ingestion.\nThe source of the log data.\nThe table where log data will be written to.\nThe table where the log data will be written to.\nTransform NDJSON array into a single array always return …\n<code>ToString::to_string</code>, but without panic on OOM.\nvalidate payload by source before processing Return a <code>Some</code> …\nThe log data to be ingested.\nThe version of the pipeline to be used for log ingestion.\nAxum extractor for optional target log table name from …\nAxum extractor for optional Pipeline name and version from …\nAxum extractor for select keys from HTTP header, to …\nAxum extractor for optional target trace table name from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandler to expose configuration information info about …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a response from query result\nHandler to export healthy check\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandler to export metrics\nHandler to execute promql\nHandler to execute sql\nHandler to parse sql\nHandler to expose information info about runtime, build, …\nHeader key of <code>db-name</code>. Example format of the header value …\nHeader key of query specific read preference. Example …\nHeader key of query specific timezone. Example format of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe header key that contains the pipeline params.\nJaegerAPIError is the error of Jaeger HTTP API.\nJaegerAPIResponse is the response of Jaeger HTTP API. The …\nJaegerData is the query result of Jaeger HTTP API.\nJaegerQueryParams is the query parameters of Jaeger HTTP …\nKeyValue is a key-value pair with typed value.\nLog is a log emitted in a span.\nOperation is an operation in a service.\nProcess is the process emitting a set of spans.\nReference is a reference from one span to another.\nSpan is a single operation within a trace.\nTrace is a collection of spans.\nValue is the value of a key-value pair in Jaeger Span …\nValueType is the type of a value stored in KeyValue struct.\nEnd time of the trace in microseconds since unix epoch.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandle the GET <code>/api/traces</code> request.\nHandle the GET <code>/api/operations</code> request.\nHandle the GET <code>/api/services/{service_name}/operations</code> …\nHandle the GET <code>/api/services</code> request.\nHandle the GET <code>/api/traces/{trace_id}</code> request.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLimit the return data.\nMax duration string value of the trace. Units can be <code>ns</code>, <code>us</code>…\nMin duration string value of the trace. Units can be <code>ns</code>, <code>us</code>…\nOperation name of the trace.\nService name of the trace.\nThe span kind of the trace.\nStart time of the trace in microseconds since unix epoch.\nTags of the trace in JSON format. It will be URL encoded …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nsince we’re hand-parsing the labels, if any error is …\nsvg flamegraph.\nOutput format.\ngoogle’s pprof format report in protobuf.\njeheap text format. Define by jemalloc.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nsvg flamegraph.\nOutput format.\ngoogle’s pprof format report in protobuf.\nSimple text format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFor VictoriaMetrics modified remote write protocol\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpecify which physical table to use for storing metrics. …\nVariants corresponding to ValueType\nFor ValueType::Matrix result type\nFor ValueType::Vector result type\nAppend the other [<code>PrometheusResponse]</code>.\nExecutes a single instant query and returns response\nExecutes a single range query and returns response\nTry to find the <code>__name__</code> matchers which op is not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from <code>Result&lt;Output&gt;</code>\nGet all tag column name of the given schema\nTries to get catalog and schema from an optional db param. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert RecordBatches to PromData\nRetrieve labels name from record batches\nRetrieve labels name from query result\nTry to parse and extract the name of referenced metric …\nTake metric name from the VectorSelector. It takes the …\nHelper macro which try to evaluate the expression and …\nUpdate catalog and schema in QueryContext if necessary.\nUpdate the <code>__name__</code> matchers in expression into special …\nExtract read preference from the request headers.\nprom supply the prometheus HTTP API Server compliance\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGreptimedb Manage Api Response struct Currently we have …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a influxdb v1 response from query result\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe json format here is different from the default json …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nBuilder for test requests.\nTest client to Axum servers.\nA wrapper around <code>reqwest::Response</code> that provides common …\nReturns the base URL (http://ip:port) for this TestClient\nSet the request body.\nGet the response body as bytes.\nGet the response in chunks.\nGet the response in chunks as text.\nCreate a DELETE request.\nSet the request forms.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a GET request.\nCreate a HEAD request.\nSet a request header.\nGet the response headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the inner <code>reqwest::Response</code> for less convenient but …\nSet the request JSON body.\nGet the response body as JSON.\nSet a request multipart form.\nCreate a new test client.\nOptions preflight request\nCreate a PATCH request.\nCreate a POST request.\nCreate a PUT request.\nGet the response status.\nGet the response body as text.\nModified from …\nApplies a timeout to requests via the supplied inner …\n<code>Timeout</code> response future\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a timeout from a duration\nCreate a new <code>DynamicTimeout</code> with the given timeout\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGrpcQueryInterceptor can track life cycle of a grpc …\nLineProtocolInterceptor can track life cycle of a line …\nLogIngestInterceptor can track life cycle of a log …\nLogQueryInterceptor can track life cycle of a log query …\nOpenTelemetryProtocolInterceptor can track life cycle of …\nPromQueryInterceptor can track life cycle of a prometheus …\nPromStoreProtocolInterceptor can track life cycle of a …\nSqlQueryInterceptor can track life cycle of a sql query …\nCalled after execution finished. The implementation can …\nCalled after execution finished. The implementation can …\nCalled after execution finished. The implementation can …\nCalled after the lines are converted to the …\nCalled after sql is parsed into statements. This …\nCalled after execution finished. The implementation can …\nCalled before sql is actually executed. This hook is not …\nCalled before request is actually executed.\nCalled before request is actually executed.\nCalled before insertion.\nCalled before a query string is parsed into sql statements.\nCalled before pipeline execution.\nCalled before query is actually executed.\nHttp influxdb write duration per database.\nHttp logs query duration per database.\nHttp prometheus endpoint query duration per database.\nHttp pql query duration per database.\nPrometheus remote write codec duration.\nDuration to convert prometheus write request to gRPC …\nDecode duration of prometheus write request.\nHttp prometheus read duration per database.\nHttp prometheus write duration per database.\nHttp SQL query duration per database.\nA metrics middleware.\nThe samples count of Prometheus remote write.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA middleware to record metrics for HTTP.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\na server that serves metrics only start when datanode …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUse regex to filter out some MySQL federated components’ …\nParameters passed through cli\nParameters for the prepared statement\nParameters passed through protocol\nRemove the prepared statement by a given statement key\nDescribe the statement\nExecute the logical plan and return the output\nSave the prepared statement and return the parameters and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRetrieve the query and logical plan by a given statement …\nParameters that the client must provide when executing the …\nSave query and logical plan with a given statement key\nConvert an MySQL expression to a scalar value. It …\nConvert <code>ParamValue</code> into <code>Value</code> according to param type. It …\nGive placeholder that cast to certain type <code>data_type</code> the …\nReturns the placeholder string “$i”.\nReplace all the “?” placeholder into “$i” in SQL, …\nTransform all the “?” placeholder into “$i”. Only …\n<code>MysqlSpawnConfig</code> stores config values which are used to …\n<code>MysqlSpawnRef</code> stores arc refs that should be passed to new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates MySQL columns definition from our column schema.\nIndicate no more result set to write. No need to call this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandle GreptimeDB error, convert it to MySQL error\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTry to write one result set. If there are more than one …\nTry to write multiple output to the writer if possible.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis serves as a workaround for otel-arrow collector’s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ntransform otlp logs request to pipeline value …\nConvert OpenTelemetry metrics to GreptimeDB insert requests\nthe default column count for table writer\nencode this gauge metric\nEncode histogram data. This function returns 3 insert …\nencode this sum metric\nNormalize otlp instrumentation, metric and attribute names\nConvert OpenTelemetry metrics to GreptimeDB insert requests\nThe span kind prefix in the database. If the span kind is …\nConvert SpanTraces to GreptimeDB row insert requests. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert OpenTelemetry traces to SpanTraces\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nConvert SpanTraces to GreptimeDB row insert requests. …\nConvert SpanTraces to GreptimeDB row insert requests. …\nNever call this on <code>GreptimeIdentityPipeline</code> because it’s …\nkey to store our parsed catalog\nkey to store our parsed schema\nBuilder for <code>MakePostgresServerHandler</code>.\nError type for MakePostgresServerHandlerBuilder\nUninitialized field\nCustom validation error\nBuilds a new <code>MakePostgresServerHandler</code>.\nCreate an empty builder, with all fields set to <code>None</code> or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA function extracted to resolve lifetime and readability …\nTest if given query statement matches the patterns\nProcess unsupported SQL and return fixed result as a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new Postgres server with provided query_handler …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nsuccessful_completion\nSNAFU context selector for the <code>PgErrorCode::Ec00000</code> variant\nwarning\nSNAFU context selector for the <code>PgErrorCode::Ec01000</code> variant\nno_data\nSNAFU context selector for the <code>PgErrorCode::Ec02000</code> variant\nsql_statement_not_yet_complete\nSNAFU context selector for the <code>PgErrorCode::Ec03000</code> variant\nconnection_exception\nSNAFU context selector for the <code>PgErrorCode::Ec08000</code> variant\ntriggered_action_exception\nSNAFU context selector for the <code>PgErrorCode::Ec09000</code> variant\nfeature_not_supported\nSNAFU context selector for the <code>PgErrorCode::Ec0A000</code> variant\ninvalid_transaction_initiation\nSNAFU context selector for the <code>PgErrorCode::Ec0B000</code> variant\nlocator_exception\nSNAFU context selector for the <code>PgErrorCode::Ec0F000</code> variant\ninvalid_grantor\nSNAFU context selector for the <code>PgErrorCode::Ec0L000</code> variant\ninvalid_role_specification\nSNAFU context selector for the <code>PgErrorCode::Ec0P000</code> variant\ndiagnostics_exception\nSNAFU context selector for the <code>PgErrorCode::Ec0Z000</code> variant\ncase_not_found\nSNAFU context selector for the <code>PgErrorCode::Ec20000</code> variant\ncardinality_violation\nSNAFU context selector for the <code>PgErrorCode::Ec21000</code> variant\ndata_exception\nSNAFU context selector for the <code>PgErrorCode::Ec22000</code> variant\ninvalid_parameter_value\nSNAFU context selector for the <code>PgErrorCode::Ec22023</code> variant\nintegrity_constraint_violation\nSNAFU context selector for the <code>PgErrorCode::Ec23000</code> variant\ninvalid_cursor_state\nSNAFU context selector for the <code>PgErrorCode::Ec24000</code> variant\ninvalid_transaction_state\nSNAFU context selector for the <code>PgErrorCode::Ec25000</code> variant\nread_only_sql_transaction\nSNAFU context selector for the <code>PgErrorCode::Ec25006</code> variant\ninvalid_sql_statement_name\nSNAFU context selector for the <code>PgErrorCode::Ec26000</code> variant\ntriggered_data_change_violation\nSNAFU context selector for the <code>PgErrorCode::Ec27000</code> variant\ninvalid_authorization_specification\nSNAFU context selector for the <code>PgErrorCode::Ec28000</code> variant\ninvalid_password\nSNAFU context selector for the <code>PgErrorCode::Ec28P01</code> variant\ndependent_privilege_descriptors_still_exist\nSNAFU context selector for the <code>PgErrorCode::Ec2B000</code> variant\ninvalid_transaction_termination\nSNAFU context selector for the <code>PgErrorCode::Ec2D000</code> variant\nsql_routine_exception\nSNAFU context selector for the <code>PgErrorCode::Ec2F000</code> variant\ninvalid_cursor_name\nSNAFU context selector for the <code>PgErrorCode::Ec34000</code> variant\nexternal_routine_exception\nSNAFU context selector for the <code>PgErrorCode::Ec38000</code> variant\nexternal_routine_invocation_exception\nSNAFU context selector for the <code>PgErrorCode::Ec39000</code> variant\nsavepoint_exception\nSNAFU context selector for the <code>PgErrorCode::Ec3B000</code> variant\ninvalid_catalog_name\nSNAFU context selector for the <code>PgErrorCode::Ec3D000</code> variant\ninvalid_schema_name\nSNAFU context selector for the <code>PgErrorCode::Ec3F000</code> variant\ntransaction_rollback\nSNAFU context selector for the <code>PgErrorCode::Ec40000</code> variant\nsyntax_error_or_access_rule_violation\nSNAFU context selector for the <code>PgErrorCode::Ec42000</code> variant\ninsufficient_privilege\nSNAFU context selector for the <code>PgErrorCode::Ec42501</code> variant\nsyntax_error\nSNAFU context selector for the <code>PgErrorCode::Ec42601</code> variant\nduplicate_column\nSNAFU context selector for the <code>PgErrorCode::Ec42701</code> variant\nundefined_column\nSNAFU context selector for the <code>PgErrorCode::Ec42703</code> variant\nundefined_object\nSNAFU context selector for the <code>PgErrorCode::Ec42704</code> variant\nundefined_table\nSNAFU context selector for the <code>PgErrorCode::Ec42P01</code> variant\nduplicate_database\nSNAFU context selector for the <code>PgErrorCode::Ec42P04</code> variant\nduplicate_table\nSNAFU context selector for the <code>PgErrorCode::Ec42P07</code> variant\ninvalid_prepared_statement_definition\nSNAFU context selector for the <code>PgErrorCode::Ec42P14</code> variant\nwith_check_option_violation\nSNAFU context selector for the <code>PgErrorCode::Ec44000</code> variant\ninsufficient_resources\nSNAFU context selector for the <code>PgErrorCode::Ec53000</code> variant\nprogram_limit_exceeded\nSNAFU context selector for the <code>PgErrorCode::Ec54000</code> variant\nobject_not_in_prerequisite_state\nSNAFU context selector for the <code>PgErrorCode::Ec55000</code> variant\noperator_intervention\nSNAFU context selector for the <code>PgErrorCode::Ec57000</code> variant\nsystem_error\nSNAFU context selector for the <code>PgErrorCode::Ec58000</code> variant\nsnapshot_too_old\nSNAFU context selector for the <code>PgErrorCode::Ec72000</code> variant\nconfig_file_error\nSNAFU context selector for the <code>PgErrorCode::EcF0000</code> variant\nfdw_error\nSNAFU context selector for the <code>PgErrorCode::EcHV000</code> variant\nplpgsql_error\nSNAFU context selector for the <code>PgErrorCode::EcP0000</code> variant\ninternal_error\nSNAFU context selector for the <code>PgErrorCode::EcXX000</code> variant\nAn iterator over the variants of PgErrorCode\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nOn average one month has 30.44 day, which is a common …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nBuilder for one table.\nTablesBuilder serves as an intermediate container to build …\nAdds a set of labels and samples to table builder.\nConverts TablesBuilder to [RowInsertRequests] and row …\nConverts TableBuilder to RowInsertRequest and clears …\nIndices of columns inside <code>schema</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets table builder with given table name. Creates an empty …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRows written.\nColumn schemas.\nThe same as <code>FIELD_COLUMN_MATCHER</code> in <code>promql</code> crate\nMetrics for push gateway protocol\nCollect each row’s timeseries id This processing is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMock timeseries for test, it is both used in servers and …\nAdd new labels to the mock timeseries.\nCreate a DataFrame from a remote Query\nGet table name from remote query\nThe maximum number of metrics at one time.\nCreate a DataFrame from promql <code>__name__</code> matchers.\nQuery metric table names by the <code>__name__</code> matchers.\nA hook to be injected into the PromWriteRequest decoding …\nDecodes bytes into String values according provided …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads a variable-length encoded bytes field from <code>buf</code> and …\nSimilar to <code>Bytes::split_to</code>, but directly operates on …\nHandle Jaeger query requests.\nHandle log query requests.\nPipelineHandler is responsible for handling pipeline …\nGet catalog manager.\nA successful request will not return a response. Only on …\nA successful request will not return a response. Only on …\nFind traces by query params. It’s used for <code>/api/traces</code> …\nReturns the argument unchanged.\nGet Jaeger operations. It’s used for <code>/api/operations</code> and …\nGet a original pipeline by name.\nGet trace services. It’s used for <code>/api/services</code> API.\nGet trace by trace id. It’s used for …\nHandling push gateway requests\nCalls <code>U::from(self)</code>.\nHandling opentelemetry metrics request\nExecute a log query.\nHandling prometheus remote read requests\nHandling opentelemetry traces request\nHandling prometheus remote write requests\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nanything that can be cleared\nWrapper around vector to avoid deallocations on clear.\nGet data a mutable raw pointer.\nView data as mutable slice.\nGet data as raw pointer.\nView data as slice.\nReturn current capacity.\nClear this make, make it equivalent to newly created …\nClear.\nTrue iff this container contains given element.\nReturns the argument unchanged.\nCopy slice data to <code>RepeatedField</code>\nCopy slice data to <code>RepeatedField</code>\nCreate a contained with data from given vec.\nView all but last elements of this container.\nInsert an element at specified position.\nCalls <code>U::from(self)</code>.\nConvert data into vec.\nReturns true if this container is empty.\nImmutable data iterator.\nMutable data iterator.\nLast element of this container.\nMutable last element of this container.\nReturn number of elements in this container.\nCreate new empty container.\nPop last element.\nPush an element to the end.\nPush default value. This operation could be faster than …\nRemove an element from specified position.\nRetains only the elements specified by the predicate.\nReverse in place.\nGet subslice of this container.\nGet slice from given index.\nGet slice to given index.\nSort elements with given comparator.\nView this container as two slices split at given index.\nView this container as two mutable slices split at given …\nView all but first elements of this container.\nCopy this data into new vec.\nTruncate at specified length.\nThe intermediate data structure for building the write …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the request and number of rows in it.\nWrite float64 data as a field into the table data.\nWrite data as fields into the table data.\nWrite data as a tag into the table data.\nWrite data as tags into the table data.\nWrite timestamp data as milliseconds into the table data.\nWrite timestamp data as nanoseconds into the table data.\nServerHandlers is used to manage the lifecycle of all the …\nFinds the <strong>actual</strong> bound address of the service by its name.\nBind the server to the given address and set the …\nFinds the actual bind address of this server. If not found …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInserts a ServerHandler <strong>before</strong> the ServerHandlers is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nShutdown the server gracefully.\nShutdown all the managed services. It will block until all …\nStarts the server and binds on <code>listening</code>.\nStarts all the managed services. It will block until all …\n<code>ToString::to_string</code>, but without panic on OOM.\nA mutable container for TLS server config\nTlsMode is used for Mysql and Postgres server start up.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the server config hold by this container\nGet associated <code>TlsOption</code>\nGet version of current config\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReread server certificates and keys from file system.\nCreate server config by loading configuration from …")