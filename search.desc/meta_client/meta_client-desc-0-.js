searchState.loadedDescShard("meta_client", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA client for the cluster info. Read only and corresponding …\nA trait for clients that can manage region followers.\nAsk the leader address of <code>metasrv</code>, and the heartbeat …\nBatchDelete atomically deletes the given keys from the …\nBatchGet atomically get values by the given keys from the …\nBatchPut atomically puts the given keys into the key-value …\nCompareAndPut atomically puts the value to the given …\nReturns the role of Datanode’s default options.\nDeleteRange deletes the given range from the key-value …\nReturns the role of Flownode’s default options.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the role of Frontend’s default options.\nReturns a heartbeat bidirectional streaming: (sender, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubmit a region migration task.\nPut puts the given key into the key-value store.\nQuery the procedure state by its id.\nRange gets the keys in the range from the key-value store.\nSubmit a DDL task\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA client for the cluster info. Read only and corresponding …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFetch the next message from this stream.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrate the region from one datanode to the other datanode:\nQuery the procedure’ state by its id\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSNAFU context selector for the <code>Error::AskLeaderTimeout</code> …\nSNAFU context selector for the <code>Error::ConvertMetaRequest</code> …\nSNAFU context selector for the <code>Error::ConvertMetaResponse</code> …\nSNAFU context selector for the <code>Error::CreateChannel</code> variant\nSNAFU context selector for the <code>Error::CreateHeartbeatStream</code>…\nContains the error value\nSNAFU context selector for the <code>Error::GetFlowStat</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidResponseHeader</code>…\nSNAFU context selector for the <code>Error::MetaServer</code> variant\nSNAFU context selector for the <code>Error::NoLeader</code> variant\nSNAFU context selector for the <code>Error::NotStarted</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::ReadOnlyKvBackend</code> …\nSNAFU context selector for the <code>Error::RetryTimesExceeded</code> …\nSNAFU context selector for the <code>Error::SendHeartbeat</code> variant\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")