searchState.loadedDescShard("metric_engine", 0, "Metric Engine is a region engine to store timeseries data …\nInternal metrics for observability.\nThe default flush interval of the metadata region.\nConfiguration for the metric engine.\nExperimental feature to use sparse primary key encoding.\nThe flush interval of the metadata region.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSanitizes the configuration.\nThis is a generic handler like MetricEngine. It will …\nSubmit an alter request to underlying physical region.\nGenerate wrapped RegionAlterRequest with given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMetric Engine\nAlter multiple logical regions on the same physical region.\nClose a metric region\nCreate multiple logical regions on the same physical …\nInitialize a physical metric region at given region id.\nConvert RegionCreateRequest for data region.\nBuild RegionCreateRequest for metadata region\nDefault projection for a logical region. Includes …\nDrop a metric region\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves region’s metadata.\nGroups the alter logical region requests by physical …\nHandles substrait query and return a stream of record …\nHandles non-query request to the region. Returns the count …\nGenerate internal column metadata.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if it’s a physical region.\nLoad logical column names of a logical region.\nLoad column metadata of a logical region.\nReturns all logical regions associated with the physical …\nPerform metric engine specific logic to incoming rows.\nName of this engine\nOpen a metric region.\nInvokes mito engine to open physical regions (data and …\nOpen a metric region.\nSpecific options for the metric engine to create or open a …\nDispatch region put request\nProxy the read request to underlying physical region (mito …\nRecovers MetricEngineState from physical region (idnefied …\nImplementation of retrieving logical region’s region …\nRetrieves region’s disk usage.\nReturns the physical region role.\nInternal states of metric engine\nStops the engine\nGenerate a filter on the table id column.\nTransform the open request to open metadata region and …\nTransform the projection from logical region to physical …\nBuild data region id and metadata region id from the given …\nTransform the ScanRequest from logical region to physical …\nVerifies a put request for a logical region against its …\nCheck if\nExtract new columns from the create requests.\nValidate the alter region requests.\nGroups the create logical region requests by physical …\nParses the physical region id from the request.\nCreates the region options for metadata region in metric …\nExtract new columns from the create requests.\nIndex options for auto created columns\nPhysical region options.\nThe empirical value for the seg row count of the metric …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets data region specific options.\nInternal states of metric engine\nPanic\nPanic\nPanic\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCache for the column metadata of logical regions. The …\nReturns a reference to the logical region ids.\nMapping from logical region id to physical region id.\nReturns a reference to the physical region options.\nReturns a reference to the physical columns.\nPhysical regions states.\nRemoves a logical region id from the physical region state.\nRemove all data that are related to the logical region id.\nRemove all data that are related to the physical region id.\nReplace the logical columns of the logical region with …\nSNAFU context selector for the <code>Error::AddingFieldColumn</code> …\nSNAFU context selector for the <code>Error::BatchOpenMitoRegion</code> …\nSNAFU context selector for the <code>Error::CloseMitoRegion</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::ColumnNotFound</code> …\nSNAFU context selector for the <code>Error::ColumnTypeMismatch</code> …\nSNAFU context selector for the <code>Error::ConflictRegionOption</code> …\nSNAFU context selector for the <code>Error::CreateMitoRegion</code> …\nSNAFU context selector for the <code>Error::DecodeColumnValue</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::EncodePrimaryKey</code> …\nContains the error value\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidMetadata</code> …\nSNAFU context selector for the <code>Error::LogicalRegionNotFound</code>…\nSNAFU context selector for the <code>Error::MetricManifestInfo</code> …\nSNAFU context selector for the <code>Error::MissingRegionOption</code> …\nSNAFU context selector for the <code>Error::MitoCatchupOperation</code> …\nSNAFU context selector for the <code>Error::MitoDeleteOperation</code> …\nSNAFU context selector for the <code>Error::MitoFlushOperation</code> …\nSNAFU context selector for the <code>Error::MitoReadOperation</code> …\nSNAFU context selector for the <code>Error::MitoSyncOperation</code> …\nSNAFU context selector for the <code>Error::MitoWriteOperation</code> …\nSNAFU context selector for the <code>Error::MultipleFieldColumn</code> …\nSNAFU context selector for the <code>Error::NoFieldColumn</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::OpenMitoRegion</code> …\nSNAFU context selector for the <code>Error::ParseRegionId</code> variant\nSNAFU context selector for the <code>Error::ParseRegionOptions</code> …\nSNAFU context selector for the <code>Error::PhysicalRegionBusy</code> …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::StartRepeatedTask</code> …\nSNAFU context selector for the <code>Error::UnexpectedRequest</code> …\nSNAFU context selector for the <code>Error::UnsupportedAlterKind</code> …\nSNAFU context selector for the …\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe other two fields key and value will be used as a k-v …\nAdd logical regions to the metadata region.\nColumn name will be encoded by base64(STANDARD_NO_PAD)\nConcat a column key prefix without column name\nDecode a record batch stream to a stream of items.\nDecode a record batch to a list of key.\nDecode a record batch to a list of key and value.\nDelete the given keys. For performance consideration, this …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet all the columns of a given logical region. Return a …\nLogical lock for operations that need to be serialized. …\nReturn all logical regions associated with the physical …\nOpen a logical region.\nParse column key to (logical_region_id, column_name)\nRetrieve a read lock guard of given logical region id.\nRemove a registered logical region from metadata.\nRetrieve a write lock guard of given logical region id.\nCounter for forbidden operations\nGauge for opened logical regions\nHistogram for opened logical regions\nHistogram for underlying mito operations\nStage label.\nGauge of columns across all opened regions\nGauge for opened regions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTask to flush metadata regions.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIndex of a row.\nIterator of a row.\nA row modifier modifies <code>Rows</code>.\nIterator of rows.\nTsid generator.\nIndex of a value.\nFills internal columns of a row with table name and a hash …\nGenerates a new TSID.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the iterator of rows.\nModify rows with the given primary key encoding.\nModifies rows with dense primary key encoding. It adds two …\nModifies rows with sparse primary key encoding. It …\nReturns the primary keys.\nReturns the primary keys with their names.\nReturns the remaining columns.\nReturns the remaining columns.\nWrites a label pair to the generator.\nAppends the given RegionId’s manifest info to the given …\nEncodes the given list of (RegionId, RegionManifestInfo) …\nGet the region statistic of the given RegionId.\nChange the given RegionId’s region group to …\nChange the given RegionId’s region group to …")